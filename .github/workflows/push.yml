name: push

on:
  push:
    branches:
      - main
  pull_request: 
    branches: 
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Set Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x

    - name: Install Dependencies
      run: npm ci

    - name: Lint
      run: npm run lint

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Set Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x

    - name: Install Dependencies
      run: npm ci

    - name: Build
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: ./dist
  
  test:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Set Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x

    - name: Install Dependencies
      run: npm ci

    - name: Test
      run: npm run test
    
    - name: Test Report
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: test-report.xml
      if: always()
  
  pr-prerelease:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    needs:
      - lint
      - build
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./dist

      - name: Install Dependencies
        run: npm ci
      
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      
      - name: Configure Git
        uses: fregante/setup-git-user@v1

      - name: Version the packages
        id: version
        run: |
          export VERSION=$(npm version --no-commit-hooks --no-git-tag-version prerelease --preid $(echo "${{ steps.extract_branch.outputs.branch }}" | tr -cs 'a-zA-Z0-9-' '-' | sed 's/-$//'))
          yarn workspaces foreach -A -t --no-private exec "npm version $VERSION --no-commit-hooks --no-git-tag-version"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Publish to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_PUBLISH_TOKEN}}" >> ~/.npmrc
          echo "registry=https://registry.npmjs.org" >> ~/.npmrc
          npm publish --access=public --tag prerelease
          rm -f ~/.npmrc

      - name: Commit and push changes
        run: |
          git commit -am "chore(version): ğŸ“¦ prerelease version bump to ${{ steps.version.outputs.version }}"
          git push
